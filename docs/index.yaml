openapi: 3.0.0
info:
  title: Eventer API
  description: Documentation of Eventer API.
  version: 1.0.0
servers:
  - url: 'http://{host}:8081/api/v1'
    description: go service api server endpoint application
    variables:
      host:
        default: localhost
        enum:
          - localhost
paths:
  /users/email-verification:
    post:
      tags:
        - users
      summary: Email address verification
      description: Email address verification.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: qawsedrftgyhuj1234
              required:
                - token
      responses:
        '200':
          description: Email address is verified
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                  username:
                    type: string
                    example: "John Smith"
                  email:
                    type: string
                    format: email
                    example: test1@example.com
        '422':
          description: |
            Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: number
                    example: 422
                  message:
                    type: string
                    example: "Validation error"
                  data:
                    type: object
                    properties:
                      messages:
                        type: array
                        items:
                          type: string
                        example:
                          - The token is invalid.
        '500':
          $ref: '#/components/responses/500Error'

  /users/register:
    post:
      tags:
        - users
      summary: User registration
      description: |
        Register a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: test1@example.com
                password:
                  type: string
                  format: password
                  example: qwerty123456789
              required:
                - email
                - password
      responses:
        '201':
          description: User registration succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: number
                    example: 201
                  message:
                    type: string
                    example: "User registration succeeded"
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: abc123
                required:
                  - statusCode
                  - message
                  - data
        '422':
          description: |
            Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: number
                    example: 422
                  message:
                    type: string
                    example: "Validation error"
                  data:
                    type: object
                    properties:
                      messages:
                        type: array
                        items:
                          type: string
                        example:
                          - The email address is already registered.
                          - The email address must be a valid format.
        '500':
          $ref: '#/components/responses/500Error'
  /users/:userId:
    put:
      tags:
        - users
      summary: Update user profile
      description: |
        Update user profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "John Smith"
                email:
                  type: string
                  format: email
                  example: test1@example.com
                password:
                  type: string
                  format: password
                  example: qwerty123456789
              required:
                - email
                - password
      responses:
        '204':
          description: User profile update succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: number
                    example: 204
                  message:
                    type: string
                    example: "User profile update succeeded"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      username:
                        type: string
                        example: "John Smith"
                      email:
                        type: string
                        format: email
                        example: test1@example.com
                      password:
                        type: string
                        format: password
                        example: qwerty123456789
                required:
                  - statusCode
                  - message
                  - data
        '422':
          description: |
            Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: number
                    example: 422
                  message:
                    type: string
                    example: "Validation error"
                  data:
                    type: object
                    properties:
                      messages:
                        type: array
                        items:
                          type: string
                        example:
                          - User doesn't exist
        '500':
          $ref: '#/components/responses/500Error'
    delete:
      tags:
        - users
      summary: Delete user
      description: |
        Delete user
      responses:
        '204':
          description: User deletion succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: number
                    example: 204
                  message:
                    type: string
                    example: "User deletion succeeded"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        format: uuid
                      username:
                        type: string
                        example: "John Smith"
                      email:
                        type: string
                        format: email
                        example: test1@example.com
                required:
                  - statusCode
                  - message
                  - data
        '422':
          description: |
            Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: number
                    example: 422
                  message:
                    type: string
                    example: "Validation error"
                  data:
                    type: object
                    properties:
                      messages:
                        type: array
                        items:
                          type: string
                        example:
                          - Your username should be no more than 100 characters.
                          - The email address must be a valid format.
        '500':
          $ref: '#/components/responses/500Error'
  /users/login:
    post:
      tags:
        - users
      summary: User login
      description: |
        User login.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: test1@example.com
                password:
                  type: string
                  format: password
                  example: qwerty123456789
              required:
                - email
                - password
      responses:
        '200':
          description: User registration succeeded
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: number
                    example: 200
                  message:
                    type: string
                    example: "User login succeeded"
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: abc123
                required:
                  - statusCode
                  - message
                  - data
        '422':
          description: |
            Validation error
          content:
            application/json:
              schema:
                type: object
                properties:
                  statusCode:
                    type: integer
                    format: number
                    example: 422
                  message:
                    type: string
                    example: "Validation error"
                  data:
                    type: object
                    properties:
                      messages:
                        type: array
                        items:
                          type: string
                        example:
                          - The email address is already registered.
                          - The email address must be a valid format.
                          - The password is incorrect.
        '500':
          $ref: '#/components/responses/500Error'
components:
  responses:
    500Error:
      description: |
        Server error
      content:
        application/json:
          schema:
            type: object
            properties:
              statusCode:
                type: integer
                format: int64
                example: "500"
              message:
                type: string
                example: "Something went wrong with the server"
              data:
                type: object
                example: null